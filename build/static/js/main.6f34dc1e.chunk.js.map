{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","state","serverUrl","site","username","password","signInUser","token","siteId","url","hook","hookList","name","handleSubmit","bind","handleServerUrl","handleSite","handlePassword","handleUsername","handleURL","handleHook","handleCreateWebhook","remove","handleName","answser","this","xml","require","parseFromString","undefined","getElementsByTagName","setState","attributes","id","xhr","XMLHttpRequest","addEventListener","console","log","responseText","handleAnswerSignin","getHooks","open","setRequestHeader","send","req","event","preventDefault","target","value","del","style","textAlign","padding","fontSize","marginBottom","onSubmit","label","placeholder","width","type","onChange","kind","display","margin","marginTop","onClick","map","d","i","key","makeItNice","children","position","bottom","left","href","rel","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6f34dc1e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button, TextField, DropdownSelect } from '@tableau/tableau-ui';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      serverUrl: '',\r\n      site: '',\r\n      username: '',\r\n      password: '',\r\n      signInUser: '',\r\n      token: '',\r\n      siteId: '',\r\n      url: '',\r\n      hook: 'webhook-source-event-datasource-refresh-started',\r\n      hookList: [],\r\n      name: '',\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleServerUrl = this.handleServerUrl.bind(this);\r\n    this.handleSite = this.handleSite.bind(this);\r\n    this.handlePassword = this.handlePassword.bind(this);\r\n    this.handleUsername = this.handleUsername.bind(this);\r\n    this.handleURL = this.handleURL.bind(this);\r\n    this.handleHook = this.handleHook.bind(this);\r\n    this.handleCreateWebhook = this.handleCreateWebhook.bind(this);\r\n    this.remove = this.remove.bind(this);\r\n    this.handleName = this.handleName.bind(this);\r\n  }\r\n\r\n  handleAnswerSignin() {\r\n    let answser = this.state.signInUser;\r\n    var XMLParser = require('react-xml-parser');\r\n    var xml = new XMLParser().parseFromString(answser);\r\n    if (xml.getElementsByTagName('credentials')[0] !== undefined) {\r\n      this.setState({\r\n        token: xml.getElementsByTagName('credentials')[0].attributes.token,\r\n        siteId: xml.getElementsByTagName('site')[0].attributes.id,\r\n      });\r\n    }\r\n  }\r\n\r\n  signInUser() {\r\n    // create a new XMLHttpRequest\r\n    var xhr = new XMLHttpRequest();\r\n    // get a callback when the server responds\r\n    xhr.addEventListener('load', () => {\r\n      console.log(xhr.responseText);\r\n\r\n      // update the state of the component with the result here\r\n      this.setState({ signInUser: xhr.responseText });\r\n      if (this.state.signInUser !== '') {\r\n        this.handleAnswerSignin();\r\n        this.getHooks();\r\n      }\r\n    });\r\n\r\n    xhr.open('POST', `${this.state.serverUrl}/api/3.6/auth/signin`);\r\n\r\n    xhr.setRequestHeader('Access-Control-Allow-Origin', 'https://appsfortableau.com');\r\n\r\n    xhr.send(\r\n      `<tsRequest>\r\n        <credentials\r\n          name=\"${this.state.username}\"\r\n          password=\"${this.state.password}\" \r\n        >\r\n        <site contentUrl=\"${this.state.site}\" />\r\n        </credentials>\r\n        </tsRequest>`\r\n    );\r\n  }\r\n\r\n  getHooks() {\r\n    // create a new XMLHttpRequest\r\n    var req = new XMLHttpRequest();\r\n    // get a callback when the server responds\r\n    req.addEventListener('load', () => {\r\n      let answser = req.responseText;\r\n      var XMLParser = require('react-xml-parser');\r\n      var xml = new XMLParser().parseFromString(answser);\r\n      this.setState({ hookList: xml.getElementsByTagName('webhook') });\r\n    });\r\n\r\n    req.open('GET', `${this.state.serverUrl}/api/3.6/sites/${this.state.siteId}/webhooks`);\r\n    req.setRequestHeader('X-Tableau-Auth', this.state.token);\r\n\r\n    req.send();\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    //this.signInUser(this.state.username, this.state.password);\r\n    this.signInUser(this.state.username, this.state.password);\r\n  }\r\n\r\n  handleUsername(event) {\r\n    this.setState({ username: event.target.value });\r\n  }\r\n\r\n  handleServerUrl(event) {\r\n    this.setState({ serverUrl: event.target.value });\r\n  }\r\n\r\n  handleSite(event) {\r\n    this.setState({ site: event.target.value });\r\n  }\r\n\r\n  handleURL(event) {\r\n    this.setState({ url: event.target.value });\r\n  }\r\n\r\n  handleName(event) {\r\n    this.setState({ name: event.target.value });\r\n  }\r\n  handlePassword(event) {\r\n    this.setState({ password: event.target.value });\r\n  }\r\n\r\n  handleHook(event) {\r\n    this.setState({ hook: event.target.value });\r\n  }\r\n\r\n  handleCreateWebhook(event) {\r\n    event.preventDefault();\r\n    var xhr = new XMLHttpRequest();\r\n    // get a callback when the server responds\r\n    xhr.addEventListener('load', () => {\r\n      // update the state of the component with the result here\r\n      this.getHooks();\r\n    });\r\n\r\n    xhr.open('POST', `${this.state.serverUrl}/api/3.6/sites/${this.state.siteId}/webhooks`);\r\n    xhr.setRequestHeader('X-Tableau-Auth', this.state.token);\r\n\r\n    console.log(this.state.url);\r\n    xhr.send(\r\n      '<tsRequest>' +\r\n        \"<webhook name='\" +\r\n        this.state.name +\r\n        \"'>\" +\r\n        '<webhook-source>' +\r\n        '<' +\r\n        this.state.hook +\r\n        '/>' +\r\n        '</webhook-source>' +\r\n        '<webhook-destination>' +\r\n        \"<webhook-destination-http method='POST' url='\" +\r\n        this.state.url +\r\n        \"'/>\" +\r\n        '</webhook-destination>' +\r\n        '</webhook>' +\r\n        '</tsRequest>'\r\n    );\r\n  }\r\n\r\n  makeItNice(hook) {\r\n    let name = '';\r\n    if (hook === 'webhook-source-event-datasource-refresh-started')\r\n      name = 'Datasource Refresh Started';\r\n    else if (hook === 'webhook-source-event-datasource-refresh-succeeded')\r\n      name = 'Datasource Refresh Succeeded';\r\n    else if (hook === 'webhook-source-event-datasource-refresh-failed')\r\n      name = 'Datasource Refresh Failed';\r\n    else if (hook === 'webhook-source-event-datasource-updated') name = 'Datasource Updated';\r\n    else if (hook === 'webhook-source-event-datasource-created') name = 'Datasource Created';\r\n    else if (hook === 'webhook-source-event-datasource-deleted') name = 'Datasource Deleted';\r\n    else if (hook === 'webhook-source-event-workbook-updated') name = 'Workbook Updated';\r\n    else if (hook === 'webhook-source-event-workbook-created') name = 'Workbook Created';\r\n    else if (hook === 'webhook-source-event-workbook-deleted') name = 'Workbook Deleted';\r\n    else if (hook === 'webhook-source-event-workbook-refresh-started')\r\n      name = 'Workbook Refresh Started';\r\n    else if (hook === 'webhook-source-event-workbook-created') name = 'Workbook Created';\r\n    else if (hook === 'webhook-source-event-workbook-refresh-succeededed')\r\n      name = 'Workbook Refresh Succeeded';\r\n    else if (hook === 'webhook-source-event-workbook-refresh-failed')\r\n      name = 'Workbook Refresh Failed';\r\n    else name = '';\r\n    return name;\r\n  }\r\n\r\n  remove(id) {\r\n    var del = new XMLHttpRequest();\r\n    // get a callback when the server responds\r\n    del.addEventListener('load', () => {\r\n      // update the state of the component with the result here\r\n      this.getHooks();\r\n    });\r\n\r\n    del.open('DELETE', `${this.state.serverUrl}/api/3.6/sites/${this.state.siteId}/webhooks/${id}`);\r\n\r\n    del.setRequestHeader('X-Tableau-Auth', this.state.token);\r\n\r\n    del.send();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ textAlign: 'center' }}>\r\n        {this.state.signInUser === '' ? (\r\n          <div style={{ padding: 50 }}>\r\n            <h1 style={{ fontSize: 90, marginBottom: 0 }}>EasyHooks Login</h1>\r\n            <h1 style={{ fontSize: 15, marginBottom: 25 }}>\r\n              No information is stored on our servers. Refreshing the page will remove all session\r\n              data.\r\n            </h1>\r\n            <form onSubmit={this.handleSubmit}>\r\n              <TextField\r\n                label=\"Tableau Server URL\"\r\n                placeholder=\"https://10ax.online.tableau.com\"\r\n                style={{ width: 300 }}\r\n                id=\"text\"\r\n                type=\"text\"\r\n                name=\"serverUrl\"\r\n                onChange={this.handleServerUrl}\r\n              />\r\n              <br />\r\n              <TextField\r\n                label=\"Tableau Site (leave empty for default)\"\r\n                style={{ width: 300 }}\r\n                id=\"text\"\r\n                type=\"text\"\r\n                name=\"site\"\r\n                onChange={this.handleSite}\r\n              />\r\n              <br />\r\n              <TextField\r\n                label=\"Username\"\r\n                style={{ width: 300 }}\r\n                id=\"Password\"\r\n                type=\"text\"\r\n                name=\"username\"\r\n                onChange={this.handleUsername}\r\n              />\r\n              <br />\r\n              <TextField\r\n                label=\"Password\"\r\n                id=\"Password\"\r\n                style={{ width: 300 }}\r\n                type=\"password\"\r\n                name=\"username\"\r\n                onChange={this.handlePassword}\r\n              />\r\n              <Button\r\n                kind=\"primary\"\r\n                style={{ display: 'block', margin: 'auto', marginTop: 12 }}\r\n                type=\"submit\"\r\n                onClick={() => this.handleSubmit}\r\n                value=\"Start using EasyHooks!\"\r\n              >\r\n                Log in!\r\n              </Button>\r\n            </form>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <h1 style={{ fontSize: 50 }}>Add EasyHook</h1>\r\n            <form onSubmit={this.handleCreateWebhook}>\r\n              <span style={{ display: 'block' }}>\r\n                <TextField\r\n                  label=\"Webhook Name\"\r\n                  type=\"text\"\r\n                  style={{ width: 300 }}\r\n                  name=\"name\"\r\n                  onChange={this.handleName}\r\n                />\r\n              </span>\r\n              <span style={{ display: 'block' }}>\r\n                <TextField\r\n                  label=\"Handle URL\"\r\n                  style={{ width: 300 }}\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  placeholder=\"A Handle URL (For example Zapier or IFTTT\"\r\n                  onChange={this.handleURL}\r\n                />\r\n              </span>\r\n              <span style={{ display: 'block', marginTop: 12 }}>\r\n                <span style={{ display: 'block', fontSize: 10 }}>Select hook type</span>\r\n                <DropdownSelect onChange={this.handleHook}>\r\n                  <option value=\"webhook-source-event-datasource-refresh-started\">\r\n                    Datasource Refresh Started\r\n                  </option>\r\n                  <option value=\"webhook-source-event-datasource-refresh-succeeded\">\r\n                    Datasource Refresh Succeeded\r\n                  </option>\r\n                  <option value=\"webhook-source-event-datasource-refresh-failed\">\r\n                    Datasource Refresh Failed\r\n                  </option>\r\n                  <option value=\"webhook-source-event-datasource-updated\">\r\n                    Datasource Updated\r\n                  </option>\r\n                  <option value=\"webhook-source-event-datasource-created\">\r\n                    Datasource Created\r\n                  </option>\r\n                  <option value=\"webhook-source-event-datasource-deleted\">\r\n                    Datasource Deleted\r\n                  </option>\r\n                  <option value=\"webhook-source-event-workbook-updated\">Workbook Updated</option>\r\n                  <option value=\"webhook-source-event-workbook-created\">Workbook Created</option>\r\n                  <option value=\"webhook-source-event-workbook-deleted\">Workbook Deleted</option>\r\n                  <option value=\"webhook-source-event-workbook-refresh-started\">\r\n                    Workbook Refresh Started\r\n                  </option>\r\n                  <option value=\"webhook-source-event-workbook-created\">Workbook Created</option>\r\n                  <option value=\"webhook-source-event-workbook-refresh-succeededed\">\r\n                    Workbook Refresh Succeeded\r\n                  </option>\r\n                  <option value=\"webhook-source-event-workbook-refresh-failed\">\r\n                    Workbook Refresh Failed\r\n                  </option>\r\n                </DropdownSelect>\r\n              </span>\r\n              <Button\r\n                type=\"submit\"\r\n                style={{ display: 'block', margin: 'auto', marginTop: 25 }}\r\n                kind=\"primary\"\r\n                value=\"Start using EasyHooks!\"\r\n              >\r\n                Add Webhook\r\n              </Button>\r\n            </form>\r\n            {this.state.hookList !== 0 && <h1 style={{ fontSize: 50 }}>Existing hooks</h1>}\r\n            <table style={{ width: '100%' }}>\r\n              <thead>\r\n                <tr>\r\n                  <th>Remove</th>\r\n                  <th>Name</th>\r\n                  <th>Type</th>\r\n                  <th>URL</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.state.hookList.map((d, i) => (\r\n                  <tr key={i + 'row'}>\r\n                    <td key={d}>\r\n                      <Button kind=\"destructive\" onClick={() => this.remove(d.attributes.id)}>\r\n                        Remove\r\n                      </Button>\r\n                    </td>\r\n                    <td key={i + 'name'}>{d.attributes.name}</td>\r\n\r\n                    <td key={i + 'source'}>\r\n                      {this.makeItNice(\r\n                        d.getElementsByTagName('webhook-source')[0].children[0].name\r\n                      )}\r\n                    </td>\r\n                    <td key={i + 'dest'}>\r\n                      {d.getElementsByTagName('webhook-destination-http')[0].attributes.url}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n        <div />\r\n        <h3 style={{ position: 'absolute', bottom: 0, left: 20 }}>\r\n          EasyHooks is winner of the #data19 Hackathon and build by Merlijn Buit (\r\n          <a href=\"https://twitter.com/MerlijnBuit\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n            @merlijnbuit\r\n          </a>\r\n          ) and Tristan Guillevin (\r\n          <a href=\"https://twitter.com/ladataviz\" rel=\"noopener noreferrer\" target=\"_blank\">\r\n            @ladataviz\r\n          </a>\r\n          )\r\n        </h3>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}